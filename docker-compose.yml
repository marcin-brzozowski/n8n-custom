services:
  # The n8n service using our custom image
  n8n:
    # Build the Docker image from the Dockerfile in the current directory (.)
    build:
      context: .
    ports:
      # Expose n8n's port 5678 to the host machine
      - "5678:5678"
    restart: always
    environment:
      # Database connection details, pointing to the 'postgres' service
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      # Set the timezone for n8n
      - GENERIC_TIMEZONE=Europe/Warsaw
      # Enable automatic pruning of old execution data to save space
      - EXECUTIONS_DATA_PRUNE=true
      # Set the maximum age of execution data to 30 days (720 hours)
      - EXECUTIONS_DATA_MAX_AGE=720
      # The external URL for webhook callbacks.
      # Replace <YOUR_RASPBERRY_PI_IP> with your Pi's actual IP address.
      - WEBHOOK_URL=${N8N_WEBHOOK_URL}
      # Disable n8n sending data to n8n servers
      
      # See https://docs.n8n.io/hosting/configuration/configuration-examples/isolation/
      - N8N_DIAGNOSTICS_ENABLED= false
      - N8N_SENTRY_DSN= # Unset to disable sentry
      - N8N_DIAGNOSTICS_CONFIG_FRONTEND= # Unset
      - N8N_DIAGNOSTICS_CONFIG_BACKEND= # Unset
      - EXTERNAL_FRONTEND_HOOKS_URLS= # Unset
    
      # UI notification settings
      # See https://docs.n8n.io/hosting/configuration/environment-variables/deployment/
      - N8N_VERSION_NOTIFICATIONS_ENABLED=true # Show n8n version notifications in UI
      - N8N_PERSONALIZATION_ENABLED=false # Skip personalization during account creation
      - N8N_TEMPLATES_ENABLED=true # Enable templates in UI
    
      # Custom & community nodes settings
      # See https://docs.n8n.io/hosting/configuration/environment-variables/nodes/
      - NODE_FUNCTION_ALLOW_EXTERNAL="*" # Allows any external node to be imported in n8n code nodes
      - NODE_FUNCTION_ALLOW_BUILTIN="*" # Allow built-in nodes to be imported in n8n code nodes
      - N8N_COMMUNITY_PACKAGES_ENABLED=true # Allow community packages to be installed
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true # Allow community packages to be used as nodes for AI Agents
      # N8N_CUSTOM_EXTENSIONS # Path to a custom n8n extension
    
      # Logging settings
      # See https://docs.n8n.io/hosting/configuration/environment-variables/logs/#n8n-logs
      - N8N_LOG_LEVEL=${N8N_LOG_LEVEL:-info}
      - DB_LOGGING_ENABLED=false
      - DB_LOGGING_OPTIONS=query # Set to `all` to see all TypeORM logs messages, DB_LOGGING_ENABLED must be true
      - CODE_ENABLE_STDOUT=true # Show code nodes logging in stdout
    
      # Fix config file permissions warnings
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    
      # Task runner settings
      # See https://docs.n8n.io/hosting/configuration/task-runners/#setting-up-external-mode
      - N8N_RUNNERS_ENABLED=true
      # N8N_RUNNERS_MODE: external
      # N8N_RUNNERS_AUTH_TOKEN: ${N8N_RUNNERS_AUTH_TOKEN} # Required for external mode

    networks:
      - n8n-network
    volumes:
      # Mount a named volume for n8n's own data (workflows, credentials, etc.)
      - n8n_data:/home/node/.n8n
      # Mount a named volume for pipx data. This is crucial for persisting Python packages.
      - pipx_data:/home/node/.pipx
    depends_on:
      # Ensure the postgres service is running before n8n starts
      - postgres

  # The PostgreSQL database service
  postgres:
    # Use a resource-friendly Alpine version of PostgreSQL
    image: postgres:13-alpine
    restart: always
    environment:
      # Set credentials for the database. These must match the variables used in the n8n service.
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - n8n-network
    volumes:
      # Mount a named volume to persist the database data
      - postgres_data:/var/lib/postgresql/data

networks:
  n8n-network:
    name: n8n-network
    driver: bridge 

volumes:
  n8n_data:
  postgres_data:
  pipx_data:
